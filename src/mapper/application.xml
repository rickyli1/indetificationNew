<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.main.java.repository.ApplicationRepository">
	<resultMap id="applicationMap" type="Application">
		<id property="applicationId" column="application_id" />
		<result property="applicationDate" column="application_date" />
		<result property="applicationRepairer" column="application_repairer" />
		<result property="equipmentManager" column="equipment_manager" />
		<result property="equimentGroup" column="equiment_group" />
		
		<result property="equimentName" column="equiment_name" />
		<result property="repairerLevel" column="repairer_level" />
		<result property="repairerHistory" column="repairer_history" />
		<result property="remark" column="remark" />
		
		<result property="haveSuccesWwork" column="have_success_work" />
		<result property="areaHaveAbility" column="area_have_ability" />
		<result property="orginizationResult" column="orginization_result" />
		<result property="areaRepairInfo" column="areaRepairInfo" />
			
		<result column="delete_flag" property="deleteFlag" />
		<result column="CREATE_BY" property="createBy" />
		<result column="LAST_MODIFY_BY" property="lastModifyBy" />
		<result column="CREATE_TIME" property="createTime" />
		<result column="LAST_MODIFY_TIME" property="lastModifyTime" />
	</resultMap>
	
	<sql id="searchCondSql">
  		<if test="applicationDate != null and applicationDate != '' ">
  			and application_date = #{applicationDate}
  		</if>
  		<if test="applicationRepairer != null and applicationRepairer != '' ">
  			and application_repairer like concat('%',#{applicationRepairer},'%')
  		</if>
  		<if test="equimentName != null and equimentName != '' ">
  			and equiment_name  like concat('%',#{equimentName},'%')
  		</if>
  		
	</sql>
	
	<sql id="orderBySql">
	    <choose>
	    	<when test="orderType == 1">
	    		order by application_date
	    	</when>
	    	
	    	<when test="orderType == 2">
	    		order by application_repairer
	    	</when>
	    	<when test="orderType == 3">
	    		order by equiment_name	    	
	    	</when>
	    	<when test="orderType == 4">
	    		order by application_date desc
	    	</when>
	    	<when test="orderType == 5">
	    		order by application_repairer desc	    	
	    	</when>
	    	<when test="orderType == 6">
	    		order by equiment_name	desc    		    	
	    	</when>
	    	<otherwise>
	    		  order by application_date
	    	</otherwise>
	    </choose>
	</sql>
	
	 
	<select id="findApplicationsCount" resultType="int" parameterType="Application">
		select
		count(1)
		from application_new
        where delete_flag = 0
        <include refid="searchCondSql" />
	</select>
	
	
	<select id="findAllApplications" resultMap="applicationMap" parameterType="Application">
		SELECT
		  `application_id`,
		  `application_date`,
		  `application_repairer`, 
		  `equipment_manager`,
		  `equiment_group`,
		  `equiment_name`,
		  `repairer_level`,
		  `repairer_history`,
		  `remark`,
		  `CREATE_BY`,
		  `LAST_MODIFY_BY`,
		  `CREATE_TIME`,
		  `LAST_MODIFY_TIME`,
		  `DELETE_FLAG`
		FROM application_new
        where delete_flag = 0
        <include refid="searchCondSql" />
        <include refid="orderBySql" />
		LIMIT ${startNo}, ${pageSize}
	</select>
	
	<select id="findAllApplicationsForExport" resultMap="applicationMap" parameterType="Application">
		SELECT
		  `application_id`,
		  `application_date`,
		  `application_repairer`, 
		  `equipment_manager`,
		  `equiment_group`,
		  `equiment_name`,
		  `repairer_level`,
		  `repairer_history`,
		  `remark`,
		  `have_success_work`,
		  `area_have_ability`,
		  `orginization_result`,
		  `CREATE_BY`,
		  `LAST_MODIFY_BY`,
		  `CREATE_TIME`,
		  `LAST_MODIFY_TIME`,
		  `DELETE_FLAG`
		FROM application_new
		where delete_flag = 0
        <include refid="searchCondSql" />
        <include refid="orderBySql" />
	</select>
	
	<select id="findAllApplicationAuditForExport" resultMap="applicationMap" parameterType="Application">
	    select 
		an.application_id,
		an.application_date,
		an.application_repairer, 
		an.equipment_manager,
		an.equiment_group,
		an.equiment_name,
		an.repairer_level,
		an.repairer_history,
		an.remark,
		an.have_success_work,
		an.area_have_ability,
		an.orginization_result,
		an.CREATE_BY,
		an.LAST_MODIFY_BY,
		an.CREATE_TIME,
		an.LAST_MODIFY_TIME,
		an.DELETE_FLAG,
        temp5.areaRepairInfo
		from test.application_new an    
           
           left join   
           
           (
           select temp4.equipment_name,group_concat(temp4.areaRepairInfo) as areaRepairInfo
           from
           (
             select temp3.equipment_name,temp3.equipment_group,temp3.EQUIPMENT_LEVEL,
			concat_ws(<![CDATA[':']]>,temp3.EQUIPMENT_LEVEL ,temp3.areaRepairInfo) as areaRepairInfo from 
              (
               select  temp2.equipment_name,temp2.equipment_group,temp2.EQUIPMENT_LEVEL,
               group_concat(distinct temp2.COMPANY) as areaRepairInfo from 
		    (
				select en.equipment_id,en.EQUIPMENT_LEVEL,en.equipment_group ,en.EQUIPMENT_COMPANY,en.equipment_name,temp.company
			    , r.repairer_area
				from 
				(
					select a.EQUIPMENT_ID,substring_index(substring_index(a.EQUIPMENT_COMPANY,<![CDATA['、']]> ,b.AutoIncreID),<![CDATA['、']]> ,-1)  as company
					from 
					equipment_new a
					join
					incre_table b
					on b.AutoIncreID <![CDATA[<= ]]> (length(a.EQUIPMENT_COMPANY) - length(replace(a.EQUIPMENT_COMPANY, <![CDATA['、']]>,'  ' ))+1)
					where a.DELETE_FLAG=0
					order by a.EQUIPMENT_ID
				)temp 
				inner join 
				test.equipment_new en 
				on en.EQUIPMENT_ID = temp.EQUIPMENT_ID
				and en.DELETE_FLAG=0
				INNER JOIN test.repairer r
				ON TEMP.COMPANY= R.repairer_name
				
		    ) temp2
		    
		    group by temp2.equipment_name,temp2.equipment_group,temp2.EQUIPMENT_LEVEL
               
               )temp3
               group by temp3.equipment_name,temp3.EQUIPMENT_LEVEL
               
               )temp4
			group by temp4.equipment_name 
               )temp5
               on temp5.equipment_name = an.equiment_name
			where 1=1
			<if test="applicationDate != null and applicationDate != '' ">
	  			and an.application_date = #{applicationDate}
	  		</if>
	  		<if test="applicationRepairer != null and applicationRepairer != '' ">
	  			and an.application_repairer like concat('%',#{applicationRepairer},'%')
	  		</if>
	  		<if test="equimentName != null and equimentName != '' ">
	  			and an.equiment_name  like concat('%',#{equimentName},'%')
	  		</if>
			and	an.DELETE_FLAG = 0
       
	</select>
	
	<update id="deleteRepairById"  parameterType="int">
	    update application_new
	    set 
	    `LAST_MODIFY_TIME` = now(),
	    DELETE_FLAG = 1
	    where application_id = #{id}
	</update>
	
	<update id="updateRepair"  parameterType="Application">
	    update application_new
	    set 
		  `application_date` = #{applicationDate},
		  `application_repairer` = #{applicationRepairer},
		  `equipment_manager` = #{equipmentManager},
		  `equiment_group` = #{equimentGroup},
		  `equiment_name` = #{equimentName},
		  `repairer_level` = #{repairerLevel},
		  `repairer_history` = #{repairerHistory},
		  `remark` = #{remark},
	      `LAST_MODIFY_TIME` = now(),
		  `LAST_MODIFY_BY` = #{updateId}
			  
	    where application_id = #{applicationId}
	</update>
	
	<insert id="importApplications" parameterType="Application" useGeneratedKeys="true" keyProperty="applicationId">
		INSERT INTO application_new(
		  `application_date`,
		  `application_repairer`, 
		  `equipment_manager`,
		  `equiment_group`,
		  `equiment_name`,
		  `repairer_level`,
		  `repairer_history`,
		  `remark`,
		  `CREATE_BY`,
		  `LAST_MODIFY_BY`,
		  `CREATE_TIME`,
		  `LAST_MODIFY_TIME`,
		  `DELETE_FLAG`)
		VALUES(
		#{applicationDate},
		#{applicationRepairer},
		#{equipmentManager},
		#{equimentGroup},
		#{equimentName},
		#{repairerLevel},
		#{repairerHistory},
		#{remark},
		
		#{createId},
		#{updateId},
		now(),
		now(),
		0
		)
	</insert>
	
</mapper>