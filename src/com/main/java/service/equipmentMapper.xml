<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.main.java.repository.EquipmentRepository">
    <sql id="baseSearchSql">
        SELECT 
          e.`EQUIPMENT_ID`, 
		  e.`EQUIPMENT_NO`, 
		  e.`EQUIPMENT_NAME`,
		  e.`EQUIPMENT_GROUP`, 
		  e.`EQUIPMENT_SUB_GROUP`,
		  e.`EQUIPMENT_LEVEL`, 
		  e.`EQUIPMENT_COMPANY`,
		  e.`EQUIPMENT_LIMIT`, 
		  e.`CREATE_BY`,
		  e.`CREATE_TIME`,
		  e.`LAST_MODIFY_BY`, 
		  e.`LAST_MODIFY_TIME`,
		  e.`DELETE_FLAG`, 
		  e.remark
	      from  test.equipment_NEW e 
		
    </sql>
    
	<resultMap id="equipmentMap" type="Equipment">
		<result column="EQUIPMENT_ID" property="equipmentId"/>
		<result column="EQUIPMENT_NO" property="equipmentNo"/>
		<result column="EQUIPMENT_NAME" property="equipmentName"/>
		<result column="EQUIPMENT_GROUP" property="equipmentGroup"/>
		<result column="EQUIPMENT_SUB_GROUP" property="equipmentSubGroup"/>
		<result column="EQUIPMENT_LEVEL" property="equipmentLevel"/>
		<result column="EQUIPMENT_COMPANY" property="equipmentCompany"/>
		<result column="EQUIPMENT_LIMIT" property="equipmentLimit"/>
		<result column="REMARK" property="remark"/>
		<result column="DELETE_FLAG" property="deleteFlag"/>
		<result column="CREATE_BY" property="createBy"/>
		<result column="LAST_MODIFY_BY" property="lastModifyBy"/>
		<result column="CREATE_TIME" property="createTime"/>
		<result column="LAST_MODIFY_TIME" property="lastModifyTime"/>
	</resultMap>
	

  <sql id="searchCondSql">
  	<where>
  	  <if test="equipmentId != null and equipmentId != ''">  
        and e.`EQUIPMENT_ID` = #{equipmentId}
      </if> 
  	  <if test="equipmentLevel != null and equipmentLevel != ''">  
        and e.`EQUIPMENT_LEVEL` = #{equipmentLevel}
      </if> 
      <if test="equipmentName != null and equipmentName != ''">  
        and e.`EQUIPMENT_NAME` like  #{equipmentName}
      </if>  
       <if test="equipmentGroup != null and equipmentGroup != ''">  
        and e.`EQUIPMENT_GROUP` like  #{equipmentGroup}
      </if>  
       <if test="equipmentSubGroup != null and equipmentSubGroup != ''">  
        and e.`EQUIPMENT_SUB_GROUP` like  #{equipmentSubGroup}
      </if>  
       and e.DELETE_FLAG = 0
  	</where>   
  </sql>
  
  <select id="findAllEquipmentsCount" resultType="int" parameterType="Equipment">
    select 
	  count(1)
    from EQUIPMENT_NEW e
	<include refid="searchCondSql"/>  
  </select>
  
  <select id="findAllEquipments" resultMap="equipmentMap" parameterType="Equipment">
    <include refid="baseSearchSql"/>
    <include refid="searchCondSql"/>
    LIMIT ${startNo}, ${pageSize}  
  </select>

  <select id="selectEquipmentInfoByNo" resultMap="equipmentMap" parameterType="String">
    <include refid="baseSearchSql"/>
    where  e.delete_flag = '0'
        and e.`EQUIPMENT_NO` = #{equipmentNo}
  </select>
  
  <select id="findAllEquipmentsForExport" resultMap="equipmentMap" parameterType="Equipment">
    <include refid="baseSearchSql"/>
    where  e.delete_flag = '0'
       <if test="equipmentLevel != null and equipmentLevel != ''">  
        and e.`EQUIPMENT_LEVEL` = #{equipmentLevel}
      </if> 
      <if test="equipmentName != null and equipmentName != ''">  
        and e.`EQUIPMENT_NAME` like #{equipmentName}
      </if>  
       <if test="equipmentGroup != null and equipmentGroup != ''">  
        and e.`EQUIPMENT_GROUP` like #{equipmentGroup}
      </if>  
       <if test="equipmentSubGroup != null and equipmentSubGroup != ''">  
        and e.`EQUIPMENT_SUB_GROUP` like #{equipmentSubGroup}
      </if>  
  </select>
  
  <insert id="importEquipments" parameterType="Equipment" useGeneratedKeys="true" keyProperty="equipmentId">   
	INSERT INTO Equipment_NEW
	 (
	  `EQUIPMENT_NO`, 
	  `CREATE_BY`, 
	  `LAST_MODIFY_BY`, 
	  `DELETE_FLAG`, 
	  `EQUIPMENT_GROUP`, 
	  `EQUIPMENT_NAME`,
	  `EQUIPMENT_SUB_GROUP`,
	  `EQUIPMENT_LIMIT`,
	  `EQUIPMENT_COMPANY`,
	  `EQUIPMENT_LEVEL`,
	  `REMARK`,
	  `CREATE_TIME`,
	  `LAST_MODIFY_TIME`
	  ) 
    VALUES
      (
    	#{equipmentNo},
    	#{createBy},
    	#{lastModifyBy},
    	#{deleteFlag},
    	#{equipmentGroup},
    	#{equipmentName},
    	#{equipmentSubGroup},
    	#{equipmentLimit},
    	#{equipmentCompany},
    	#{equipmentLevel},
    	#{remark},
    	now(),
    	now()
    )
  </insert> 
  
   <update id="updateEquipment" parameterType="Equipment">
    UPDATE Equipment_NEW e
    SET  
          e.LAST_MODIFY_BY = #{lastModifyBy}
      <if test="equipmentName != null and equipmentName != ''">  
         ,e.`EQUIPMENT_NAME` = #{equipmentName}
      </if>  
      <if test="deleteFlag != null and deleteFlag != ''">  
	    , e.DELETE_FLAG = #{deleteFlag}
      </if>
      <if test="equipmentGroup != null and equipmentGroup != ''">  
	    , e.EQUIPMENT_GROUP = #{equipmentGroup}
      </if>
      <if test="equipmentSubGroup != null and equipmentSubGroup != ''">  
	    , e.EQUIPMENT_SUB_GROUP = #{equipmentSubGroup}
      </if>
      <if test="remark != null and remark != ''">  
	    , e.REMARK = #{remark}
      </if>
      WHERE EQUIPMENT_ID = #{equipmentId}
  </update>
  
  <update id="updateAllEquipment" parameterType="Equipment">
    UPDATE Equipment_NEW e
    SET  
      e.LAST_MODIFY_BY = #{lastModifyBy}
    
      <if test="deleteFlag != null and deleteFlag != ''">  
	    , e.DELETE_FLAG = #{deleteFlag}
      </if>
     where e.EQUIPMENT_ID = #{equipmentId};
  </update>

   <insert id="batchAddEquipmentModel" parameterType="java.util.List"  >
    
	INSERT INTO Equipment
	 (
	  `EQUIPMENT_NO`, 
	  `CREATE_BY`, 
	  `LAST_MODIFY_BY`, 
	  `DELETE_FLAG`, 
	  `GROUP_NO`, 
	  `EQUIPMENT_NAME`,
	  `SUB_GROUP_NO`,
	  `CREATE_TIME`,
	  `LAST_MODIFY_TIME`,
	    `REMARK`
	  ) 
    VALUES
    
     <foreach collection="list" item="item" index="index" separator=",">
	   (
	   	#{item.equipmentNo},
    	#{item.createBy},
    	#{item.lastModifyBy},
    	#{item.deleteFlag},
    	#{item.groupNo},
    	#{item.equipmentName},
    	#{item.subGroupNo},
    	now(),
    	now(),
    	#{item.remark}
	   )
	 </foreach>
	</insert>
	
  <delete id="deleteAllEquipments" parameterType="Equipment">
    delete from Equipment_NEW
    WHERE 1 =1
      <if test="remark != null and remark != ''">  
        and `remark` = #{remark}
      </if>  
      <if test="equipmentNo != null and equipmentNo != ''">  
        and `equipment_No` != #{equipmentNo}
      </if>  
  </delete>
  
  
  <select id="findEquipmentById" resultMap="equipmentMap" parameterType="Equipment">
    <include refid="baseSearchSql"/>
    <include refid="searchCondSql"/>
  </select>
</mapper> 